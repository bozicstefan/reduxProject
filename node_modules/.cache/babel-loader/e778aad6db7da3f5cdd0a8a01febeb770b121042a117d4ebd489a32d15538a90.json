{"ast":null,"code":"import redux, { createStore } from \"redux\";\n\n// Creating reducer for handling different actions\nconst counterReducer = (state = {\n  counter: 0\n}, action) => {\n  switch (action.type) {\n    case \"increment\":\n      return {\n        counter: state.counter + 1\n      };\n    case \"decrement\":\n      return {\n        counter: state.counter - 1\n      };\n    case \"increase\":\n      return {\n        counter: state.counter + action.value\n      };\n    default:\n      return state;\n  }\n};\n\n// Creating store and adding reducer to it\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["redux","createStore","counterReducer","state","counter","action","type","value","store"],"sources":["/home/stf/Desktop/React vezba/Max/reduxProject/src/store/index.js"],"sourcesContent":["import redux, { createStore } from \"redux\";\n\n// Creating reducer for handling different actions\nconst counterReducer = (state = { counter: 0 }, action) => {\n  switch (action.type) {\n    case \"increment\":\n      return { counter: state.counter + 1 };\n    case \"decrement\":\n      return { counter: state.counter - 1 };\n    case \"increase\":\n      return { counter: state.counter + action.value };\n    default:\n      return state;\n  }\n};\n\n// Creating store and adding reducer to it\nconst store = createStore(counterReducer);\n\nexport default store;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;;AAE1C;AACA,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAG;EAAEC,OAAO,EAAE;AAAE,CAAC,EAAEC,MAAM,KAAK;EACzD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QAAEF,OAAO,EAAED,KAAK,CAACC,OAAO,GAAG;MAAE,CAAC;IACvC,KAAK,WAAW;MACd,OAAO;QAAEA,OAAO,EAAED,KAAK,CAACC,OAAO,GAAG;MAAE,CAAC;IACvC,KAAK,UAAU;MACb,OAAO;QAAEA,OAAO,EAAED,KAAK,CAACC,OAAO,GAAGC,MAAM,CAACE;MAAM,CAAC;IAClD;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;;AAED;AACA,MAAMK,KAAK,GAAGP,WAAW,CAACC,cAAc,CAAC;AAEzC,eAAeM,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}