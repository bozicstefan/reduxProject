{"ast":null,"code":"import redux, { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\n// Creating reducer for handling different actions\n\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState\n});\n// !!!Each reducer action type MUST overwrite the state instead of mutating it!!!\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"increment\":\n      return {\n        counter: state.counter + 1,\n        showCounter: state.showCounter\n      };\n    case \"decrement\":\n      return {\n        counter: state.counter - 1,\n        showCounter: state.showCounter\n      };\n    case \"increase\":\n      return {\n        counter: state.counter + action.amount,\n        showCounter: state.showCounter\n      };\n    case \"toggle\":\n      return {\n        showCounter: !state.showCounter,\n        counter: state.counter\n      };\n    default:\n      return state;\n  }\n};\n\n// Creating store and adding reducer to it\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["redux","createStore","createSlice","initialState","counter","showCounter","name","counterReducer","state","action","type","amount","store"],"sources":["/home/stf/Desktop/React vezba/Max/reduxProject/src/store/index.js"],"sourcesContent":["import redux, { createStore } from \"redux\";\n\nimport {createSlice} from \"@reduxjs/toolkit\";\n\n// Creating reducer for handling different actions\n\nconst initialState = { counter: 0, showCounter: true };\ncreateSlice({\nname: \"counter\",\ninitialState  \n})\n// !!!Each reducer action type MUST overwrite the state instead of mutating it!!!\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"increment\":\n      return {\n        counter: state.counter + 1,\n        showCounter: state.showCounter,\n      };\n    case \"decrement\":\n      return {\n        counter: state.counter - 1,\n        showCounter: state.showCounter,\n      };\n    case \"increase\":\n      return {\n        counter: state.counter + action.amount,\n        showCounter: state.showCounter,\n      };\n    case \"toggle\":\n      return { showCounter: !state.showCounter, counter: state.counter };\n    default:\n      return state;\n  }\n};\n\n// Creating store and adding reducer to it\nconst store = createStore(counterReducer);\n\nexport default store;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAE1C,SAAQC,WAAW,QAAO,kBAAkB;;AAE5C;;AAEA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AACtDH,WAAW,CAAC;EACZI,IAAI,EAAE,SAAS;EACfH;AACA,CAAC,CAAC;AACF;AACA,MAAMI,cAAc,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EACvD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QACLN,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAG,CAAC;QAC1BC,WAAW,EAAEG,KAAK,CAACH;MACrB,CAAC;IACH,KAAK,WAAW;MACd,OAAO;QACLD,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAG,CAAC;QAC1BC,WAAW,EAAEG,KAAK,CAACH;MACrB,CAAC;IACH,KAAK,UAAU;MACb,OAAO;QACLD,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAGK,MAAM,CAACE,MAAM;QACtCN,WAAW,EAAEG,KAAK,CAACH;MACrB,CAAC;IACH,KAAK,QAAQ;MACX,OAAO;QAAEA,WAAW,EAAE,CAACG,KAAK,CAACH,WAAW;QAAED,OAAO,EAAEI,KAAK,CAACJ;MAAQ,CAAC;IACpE;MACE,OAAOI,KAAK;EAChB;AACF,CAAC;;AAED;AACA,MAAMI,KAAK,GAAGX,WAAW,CAACM,cAAc,CAAC;AAEzC,eAAeK,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}